
                                        +------------------------------------+
                                        |              assigner.py           |
                                        +------------------------------------+
                                                   |          |
             frontiers, mapData                    |          | frontiers
                        |                          |          |
                        v                          v          |
        +---------------+-----------+    +---------+-----------+
        |                           |    |                    |
        |    filter.py              |    |  frontier_opencv   |
        |                           |    |     _detector      |
        +----------+----------------+    +----------+---------+
                   |                                |
                   | frontiers, mapData, globalmaps |
                   |                                |
                   v                                v
    +--------------+--------------+       +--------+----------+
    |                             |       |                   |
    |   functions.py              |       |   getfrontier.py  |
    |                             |       |                   |
    +-----------------------------+       +-------------------+

```

这个图更详细地展示了每个脚本文件之间的数据传递和协作关系：

1. `assigner.py` 订阅了前沿点数据和地图数据，通过调用功能函数计算信息增益并选择最合适的机器人进行探索任务。
2. `filter.py` 订阅了地图数据和全局成本地图数据，通过调用功能函数筛选出可达的前沿点，并将其发布出去。
3. `frontier_opencv_detector.py` 订阅了地图数据，通过调用 `getfrontier` 函数获取前沿点，并将其发布出去。
4. `functions.py` 中的功能函数被前面的代码段调用和使用，例如机器人的移动、路径规划、信息增益计算等。
5. `getfrontier.py` 提供了一个用于获取前沿点的函数，被 `frontier_opencv_detector.py` 调用使用。

这些脚本文件之间通过订阅和发布消息的方式实现了数据的传递和协作，以完成未知空间的探索任务。